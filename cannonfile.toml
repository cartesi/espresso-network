name = "espresso-network"
version = "20250428-dev-node-decaf-pos"
description = "Espresso Network"

[var.Settings]
espTokenOwner = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
espTokenInitialGrantRecipient = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
feeContractMultiSig = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
lcGenesisStateViewNum = "0"
lcGenesisStateBlockHeight = "0"
lcGenesisStateBlockCommRoot = "0"
lcGenesisStakeThreshold = "1"
lcGenesisStakeBlsKeyComm = "6404508828895255916893827506275841427382744721239775140745462753544601985440"
lcGenesisStakeSchnorrKeyComm = "1280444752930177982791997254719680985905658247245505815722065969671227685044"
lcGenesisStakeAmountComm = "20800575916199869666564862039153542082238860599565034691999240975959073142491"
lcStateHistoryRetentionPeriod = "864000"
lcBlocksPerEpoch = "30"
lcEpochStartBlock = "1"
lcOwner = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
stakeTableOwner = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
stakeTableExitEscrowPeriod = "300"
validator0Address = "0x6f6c6d0e7A6Bb0898333aadaeB4C87368041c9D6"
validator0EspBalance = "1000000000000000000000"
validator0BlsVkX0 = "13205734095737159582742966969626189244327067686926245595379016360214526102381"
validator0BlsVkX1 = "5948097197644355275884713835862355164412870456787471579648006490514401264962"
validator0BlsVkY0 = "16830162360656893353695217754214812572692852607033375348711312477699351387781"
validator0BlsVkY1 = "6422860073385367368093083745379964965643884784314002583281212299216183368459"
validator0SchnorrVkX = "14169524201008310355610502881174889702398264130974627995931344265937718319764"
validator0SchnorrVkY = "4294555762610431955131355460573756216513802256460686662788110993750656519599"
validator0BlsSigX = "5379732802143485906807571343186017047701751927631328897646841023211650029483"
validator0BlsSigY = "7887283733806703124945893967747744265158748504624989515318230393127221545941"
validator0Comission = "100"
validator0DelegateAmount = "100000000000000000000"
validator1Address = "0xD208510A88Ed64FE278dC04d331901fD8aD99434"
validator1EspBalance = "1000000000000000000000"
validator1BlsVkX0 = "18003221838645820330863142302427037276175815651977449441358203556278229742819"
validator1BlsVkX1 = "21728271165942270025002040767610283478565197312749221935580742378883837034343"
validator1BlsVkY0 = "2498710058195674129665937554150299979999903899040374800133061898896297397189"
validator1BlsVkY1 = "2084878412368613982142715914578367508141059496304320731418449909466124287453"
validator1SchnorrVkX = "19226185941697410464760546160119894991774941981376228553668909756973853049001"
validator1SchnorrVkY = "17023442620524102968461962940508762560723465839305393847098126605368727487582"
validator1BlsSigX = "4747434723966699445421591289470792538661690422857319657305251614808798134669"
validator1BlsSigY = "11186016598628722738324204677850444532575460626426367110756665617582592346704"
validator1Comission = "110"
validator1DelegateAmount = "200000000000000000000"

[deploy.PlonkVerifier]
artifact = "PlonkVerifier"
create2 = true
salt = "<%= zeroHash %>"
ifExists = "continue"

[deploy.PlonkVerifierV2]
artifact = "PlonkVerifierV2"
create2 = true
salt = "<%= zeroHash %>"
ifExists = "continue"

[deploy.FeeContract]
artifact = "FeeContract"
create2 = true
salt = "<%= zeroHash %>"
ifExists = "continue"

[deploy.EspToken]
artifact = "EspToken"
create2 = true
salt = "<%= zeroHash %>"
ifExists = "continue"

[deploy.StakeTable]
artifact = "StakeTable"
create2 = true
salt = "<%= zeroHash %>"
ifExists = "continue"

[deploy.LightClient]
artifact = "LightClientMock"
libraries.PlonkVerifier = "<%= contracts.PlonkVerifier.address %>"
create2 = true
salt = "<%= zeroHash %>"
ifExists = "continue"

[deploy.LightClientV2]
artifact = "LightClientV2Mock"
libraries.PlonkVerifierV2 = "<%= contracts.PlonkVerifierV2.address %>"
create2 = true
salt = "<%= zeroHash %>"
ifExists = "continue"

[deploy.EspTokenProxy]
artifact = "contracts/src/libraries/ERC1967Proxy.sol:ERC1967Proxy"
abiOf = ["EspToken"]
args = [
    "<%= contracts.EspToken.address %>",
    "<%= concat([toFunctionSelector('initialize(address,address)'), defaultAbiCoder.encode(['address', 'address'], [settings.espTokenOwner, settings.espTokenInitialGrantRecipient])]) %>",
]
create2 = true
salt = "<%= zeroHash %>"
ifExists = "continue"

[deploy.FeeContractProxy]
artifact = "contracts/src/libraries/ERC1967Proxy.sol:ERC1967Proxy"
abiOf = ["FeeContract"]
args = [
    "<%= contracts.FeeContract.address %>",
    "<%= concat([toFunctionSelector('initialize(address)'), defaultAbiCoder.encode(['address'], [settings.feeContractMultiSig])]) %>",
]
create2 = true
salt = "<%= zeroHash %>"
ifExists = "continue"

[deploy.LightClientProxy]
artifact = "contracts/src/libraries/ERC1967Proxy.sol:ERC1967Proxy"
abiOf = ["LightClient"]
args = [
    "<%= contracts.LightClient.address %>",
    "<%= concat([toFunctionSelector('initialize((uint64,uint64,uint256),(uint256,uint256,uint256,uint256),uint32,address)'), defaultAbiCoder.encode(['uint64', 'uint64', 'uint256', 'uint256', 'uint256', 'uint256', 'uint256', 'uint32', 'address'], [settings.lcGenesisStateViewNum, settings.lcGenesisStateBlockHeight, settings.lcGenesisStateBlockCommRoot, settings.lcGenesisStakeThreshold, settings.lcGenesisStakeBlsKeyComm, settings.lcGenesisStakeSchnorrKeyComm, settings.lcGenesisStakeAmountComm, settings.lcStateHistoryRetentionPeriod, settings.lcOwner])]) %>",
]
create2 = true
salt = "<%= zeroHash %>"
ifExists = "continue"

[invoke.UpgradeLightClientV2]
target = "LightClientProxy"
func = "upgradeToAndCall"
args = [
    "<%= contracts.LightClientV2.address %>",
    "<%= concat([toFunctionSelector('initializeV2(uint64,uint64)'), defaultAbiCoder.encode(['uint64', 'uint64'], [settings.lcBlocksPerEpoch, settings.lcEpochStartBlock])]) %>",
]
fromCall.func = "owner"

[deploy.StakeTableProxy]
artifact = "contracts/src/libraries/ERC1967Proxy.sol:ERC1967Proxy"
abiOf = ["StakeTable"]
args = [
    "<%= contracts.StakeTable.address %>",
    "<%= concat([toFunctionSelector('initialize(address,address,uint256,address)'), defaultAbiCoder.encode(['address', 'address', 'uint256', 'address'], [contracts.EspTokenProxy.address, contracts.LightClientProxy.address, settings.stakeTableExitEscrowPeriod, settings.stakeTableOwner])]) %>",
]
create2 = true
salt = "<%= zeroHash %>"
ifExists = "continue"

[invoke.TransferEspValidator0]
target = "EspTokenProxy"
func = "transfer"
args = [
    "<%= settings.validator0Address %>",
    "<%= settings.validator0EspBalance %>",
]
fromCall.func = "owner"

[invoke.ApproveEspValidator0]
target = "EspTokenProxy"
func = "approve"
args = [
    "<%= contracts.StakeTableProxy.address %>",
    "<%= settings.validator0DelegateAmount %>",
]
from = "<%= settings.validator0Address %>"

[invoke.RegisterValidator0]
target = "StakeTableProxy"
func = "registerValidator"
args = [
    [
        "<%= settings.validator0BlsVkX0 %>",
        "<%= settings.validator0BlsVkX1 %>",
        "<%= settings.validator0BlsVkY0 %>",
        "<%= settings.validator0BlsVkY1 %>",
    ],
    [
        "<%= settings.validator0SchnorrVkX %>",
        "<%= settings.validator0SchnorrVkY %>",
    ],
    [
        "<%= settings.validator0BlsSigX %>",
        "<%= settings.validator0BlsSigY %>",
    ],
    "<%= settings.validator0Comission %>",
]
from = "<%= settings.validator0Address %>"
depends = ["deploy.StakeTableProxy"]

[invoke.DelegateValidator0]
target = "StakeTableProxy"
func = "delegate"
args = [
    "<%= settings.validator0Address %>",
    "<%= settings.validator0DelegateAmount %>",
]
from = "<%= settings.validator0Address %>"
depends = ["invoke.RegisterValidator0"]

[invoke.TransferEspValidator1]
target = "EspTokenProxy"
func = "transfer"
args = [
    "<%= settings.validator1Address %>",
    "<%= settings.validator1EspBalance %>",
]
fromCall.func = "owner"

[invoke.ApproveEspValidator1]
target = "EspTokenProxy"
func = "approve"
args = [
    "<%= contracts.StakeTableProxy.address %>",
    "<%= settings.validator1DelegateAmount %>",
]
from = "<%= settings.validator1Address %>"

[invoke.RegisterValidator1]
target = "StakeTableProxy"
func = "registerValidator"
args = [
    [
        "<%= settings.validator1BlsVkX0 %>",
        "<%= settings.validator1BlsVkX1 %>",
        "<%= settings.validator1BlsVkY0 %>",
        "<%= settings.validator1BlsVkY1 %>",
    ],
    [
        "<%= settings.validator1SchnorrVkX %>",
        "<%= settings.validator1SchnorrVkY %>",
    ],
    [
        "<%= settings.validator1BlsSigX %>",
        "<%= settings.validator1BlsSigY %>",
    ],
    "<%= settings.validator1Comission %>",
]
from = "<%= settings.validator1Address %>"

[invoke.DelegateValidator1]
target = "StakeTableProxy"
func = "delegate"
args = [
    "<%= settings.validator1Address %>",
    "<%= settings.validator1DelegateAmount %>",
]
from = "<%= settings.validator1Address %>"
depends = ["invoke.RegisterValidator1"]
